stages:
  - build
  - test
  - deploy

variables:
  APPLICATION_NAME: image-manager
  CONTAINER_IMAGE: ${DOCKER_HUB_USERNAME}/${APPLICATION_NAME}
  CONTAINER_IMAGE_TEST: ${CONTAINER_IMAGE}:test
  CONTAINER_IMAGE_LATEST: ${CONTAINER_IMAGE}:latest
  CONTAINER_IMAGE_TAGGED: ${CONTAINER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  K8S_INGRESS_HOST: img.maximemoreillon.com

# Needed for Docker in docker build
image: moreillon/ci-dind
services:
  - name: docker:19.03.12-dind

build:
  stage: build
  only:
    - master
  tags:
    - dind
  before_script:
    # Docker hub login
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
  script:
    # Build and push
    - docker build -t ${CONTAINER_IMAGE_TEST} .
    - docker push ${CONTAINER_IMAGE_TEST}

test:
  stage: test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  tags:
    - dind
  before_script:
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
    # Creating network for TDD
    - docker network create tdd
    # Creating DB container in network
    - >
      docker run
      -d
      --rm
      --name tdd-db
      --network tdd
      --hostname tdd-db
      mongo:4
    # User manager
    - >
      docker run
      -d
      --rm
      --name tdd-um
      --network tdd
      --hostname tdd-um
      -e MONGODB_URL=mongodb://tdd-db
      -e JWT_SECRET=keyboardcat
      moreillon/user-manager-mongoose
    - sleep 120 # Wait for containers to be available

  script:
    # Run tests
    - >
      docker run
      --rm
      --name tdd
      --network tdd
      -e MONGODB_URL=mongodb://tdd-db
      -e IDENTIFICATION_URL=http://tdd-um/users/self
      -e LOGIN_URL=http://tdd-um/auth/login
      -e TEST_USER_USERNAME=admin
      -e TEST_USER_PASSWORD=admin
      ${CONTAINER_IMAGE_TEST}
      npm run coverage
    # Tagging
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_TAGGED}
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_LATEST}
    # Pushing
    - docker push ${CONTAINER_IMAGE_TAGGED}
    - docker push ${CONTAINER_IMAGE_LATEST}

deploy:
  stage: deploy
  tags:
    - dind
  only:
    - master
  before_script:
    - kubectl config use-context moreillon_ci/moreillon_k8s/kubernetes-agent:cloud
  script:
    - envsubst < kubernetes_manifest.yml | kubectl apply -n ${KUBERNETES_NAMESPACE} -f -
